[{"path":"/Users/alecbrunelle/Github/mutation-testing-talk/src/sample-module/sample-bad.ts","content":"import { isOldEnough } from './sample';\n\nconsole.log(isOldEnough({ age: 30 }));\n"},{"path":"/Users/alecbrunelle/Github/mutation-testing-talk/src/sample-module/sample.ts","content":"/**\n * A hand-written implementation of something could that be done\n * with Rambda.\n * @param {*} Person A person with the age property.\n * @return {Boolean} Is the person older or equal to 30?\n */\nexport const isOldEnough = ({ age }): boolean => {\n  return age >= 30;\n};\n"},{"path":"/Users/alecbrunelle/Github/mutation-testing-talk/src/sample-module/__tests__/sample.test.ts","content":"import { isOldEnough } from '../sample';\n\ndescribe('isOldEnough', () => {\n  it('should return true if old enough', () => {\n    const person = { age: 35 };\n    expect(isOldEnough(person)).toEqual(true);\n  });\n\n  it('should return true if old enough', () => {\n    const person = { age: 30 };\n    expect(isOldEnough(person)).toEqual(true);\n  });\n});\n"}]